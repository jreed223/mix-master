import { Request as expressRequest, Response as expressResponse} from 'express';
import { UserProfile } from '../../../types';
type FetchResponse = Response;  //Fetch API Response

/** Fetches user using the current access token.
 * If the access token is expired, the user is fetched using a new access token generated by the refresh token. */
export async function fetchProfile(accessToken:string): Promise<FetchResponse> {


    const res = await fetch("https://api.spotify.com/v1/me", {
        method: "GET", headers: { Authorization: `Bearer ${accessToken}` }
    })
    // if(res.ok){
    // console.log('response found fetching profile:', res)
    return res
        



}

export const userProfile = (req: expressRequest, res: expressResponse)=>{
    const accessToken = req.cookies.access_token? req.cookies.access_token:res.locals.access_token
    if(accessToken){
        fetchProfile(accessToken).then(async (response: FetchResponse) =>{
            if(response.ok){
                console.log("OK response from spotify-data/user")
                const user : UserProfile  = await response.json()
                res.send(user)
            }else{
                const error = await response.json()
                // res.clearCookie('authorizing')
                // res.clearCookie('access_token')
                console.error("Failed to retrieve user (/spotify-data/user): ", error)
            }
        })
        .catch((e:Error)=>{
            // res.clearCookie('authorizing')
            // res.clearCookie('access_token')
            // res.clearCookie('refresh_token')
            console.error("Fetch operation failed (/spotify-data/user)): ", e)
        })
    }else{
        console.error("No access token found (/spotify-data/user)")
    }
}